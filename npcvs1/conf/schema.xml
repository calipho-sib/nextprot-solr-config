<?xml version="1.0" encoding="UTF-8" ?>

<!-- NPENTRIES1 core -->

<schema name="example" version="1.5">

 <fields>
 
   <field name="id"                  type="string"            indexed="true"  stored="true" />
   <field name="ac"                  type="text_split0"       indexed="true"  stored="true" />
   <field name="name"                type="text_split0"       indexed="true"  stored="true" />
   <field name="name_s"              type="string"            indexed="true"  stored="true" />
   <field name="synonyms"            type="text_split0"       indexed="true"  stored="true" />
   <field name="description"         type="text_split0"       indexed="true"  stored="true" />
   <field name="properties"          type="text_split0"       indexed="true"  stored="true" />
   <field name="filters"             type="text_split0"       indexed="true"  stored="true" />
   <field name="other_xrefs"         type="text_split0"       indexed="true"  stored="true" />
   <field name="text"                type="text_split0"       indexed="true"  stored="true" multiValued="true" />
   <field name="_version_"           type="long"              indexed="true"  stored="true"/>
   
 </fields>

 <uniqueKey>id</uniqueKey>

 <copyField source="ac"             dest="text"/>
 <copyField source="name"         	dest="text"/>
 <copyField source="synonyms"       dest="text"/>
 <copyField source="properties"     dest="text"/>
 <copyField source="other_xrefs"    dest="text"/>
 <copyField source="description"    dest="text"/>

 
<types>
    <fieldType name="string" 	class="solr.StrField" 		 sortMissingLast="true" />
    <fieldType name="int" 		class="solr.TrieIntField" 	 precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" 	class="solr.TrieFloatField"  precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" 		class="solr.TrieLongField" 	 precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" 	class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="date" 		class="solr.TrieDateField" 	 precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="random" 	class="solr.RandomSortField" indexed="true" />
    <fieldtype name="binary" 	class="solr.BinaryField"/>


    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.EnglishPossessiveFilterFactory"/>
	<filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
<!--
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
-->
        <filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.EnglishPossessiveFilterFactory"/>
	<filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>


    <fieldType name="text_nostem" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.EnglishPossessiveFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
<!-- experimental -->
        <filter class="solr.WordDelimiterFilterFactory" 
		generateWordParts="1" catenateWords="1" 
		generateNumberParts="0" catenateNumbers="0" 
		catenateAll="0" preserveOriginal="0"
		splitOnCaseChange="0" splitOnNumerics="0"
		stemEnglishPossessive="1"
	/>
        <filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.EnglishPossessiveFilterFactory"/>
      </analyzer>
    </fieldType>


<!-- original tuning of word split / concat

        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="0" 
		catenateWords="1" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0" 
		splitOnNumerics="0" stemEnglishPossessive="1"/>
-->

<!-- remark: stop filter used twice, see comments in stopwords file -->
    <fieldType name="text_split0" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <charFilter class="solr.HTMLStripCharFilterFactory"/>   
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
        <filter class="solr.WordDelimiterFilterFactory" 
			generateWordParts="1" generateNumberParts="1" 
			catenateWords="0" catenateNumbers="0" catenateAll="0" 
			splitOnCaseChange="0" splitOnNumerics="1" preserveOriginal="1" stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/> 
      <filter class="solr.PatternReplaceFilterFactory" pattern="^(\p{Punct}*)(.*?)(\p{Punct}*)$" replacement="$2"/>
      <filter class="solr.LengthFilterFactory" min="1" max="100" />  
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
      <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> 
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.HTMLStripCharFilterFactory"/>
	<tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
        <filter class="solr.WordDelimiterFilterFactory" 
        	generateWordParts="1" generateNumberParts="1" 
        	catenateWords="0" catenateNumbers="0" catenateAll="0" 
        	splitOnCaseChange="0" splitOnNumerics="1" preserveOriginal="1" stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/> 
      <filter class="solr.PatternReplaceFilterFactory" pattern="^(\p{Punct}*)(.*?)(\p{Punct}*)$" replacement="$2"/>
      <filter class="solr.LengthFilterFactory" min="1" max="100" />  
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
      <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> 
      </analyzer>
    </fieldType>




    <fieldType name="type_test1" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
<!-- -->
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" 
		catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="0" 
		splitOnNumerics="1" preserveOriginal="1" stemEnglishPossessive="1"/>
      <filter class="solr.PatternReplaceFilterFactory" pattern="^(\p{Punct}*)(.*?)(\p{Punct}*)$" replacement="$2"/>
      <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> 


<!--      <filter class="solr.ShingleFilterFactory" minShingleSize="4" maxShingleSize="4" outputUnigrams="false"/> -->
<!--      <filter class="solr.EdgeNGramFilterFactory" minGramSize="3" maxGramSize="6" side="front"/> -->
<!--      <filter class="solr.CollationKeyFilterFactory" language="en" strength="primary"/> -->

      </analyzer>
    </fieldType>





    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>
    
    <fieldtype name="phonetic" stored="false" indexed="true" class="solr.TextField" >
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
      </analyzer>
    </fieldtype>


    <!-- lowercases the entire field value, keeping it as a single token.  -->
    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  --> 
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />

    
    <!-- French -->
    <fieldType name="text_fr" class="solr.TextField" positionIncrementGap="100">
      <analyzer> 
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- removes l', etc -->
        <filter class="solr.ElisionFilterFactory" ignoreCase="true" articles="lang/contractions_fr.txt"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fr.txt" format="snowball" enablePositionIncrements="true"/>
        <filter class="solr.FrenchLightStemFilterFactory"/>
        <!-- less aggressive: <filter class="solr.FrenchMinimalStemFilterFactory"/> -->
        <!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="French"/> -->
      </analyzer>
    </fieldType>
    

 </types>
  
  <!-- Similarity is the scoring routine for each document vs. a query.
       A custom Similarity or SimilarityFactory may be specified here, but 
       the default is fine for most applications.  
       For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
    -->
  <!--
     <similarity class="com.example.solr.CustomSimilarityFactory">
       <str name="paramkey">param value</str>
     </similarity>
    -->

</schema>
